{"ast":null,"code":"import { animateMoveTo } from \"../../../utils/animationUtils\";\nlet lastCardActive = {\n  name: '',\n  value: '',\n  ref: null\n};\nfunction cardClick(e, name, value, refCard, changeCardRef) {\n  if (e.target.dataset.side == 'back') {\n    if (refCard.current) {\n      if (lastCardActive['name'] == name && lastCardActive['value'] == value) {\n        const {\n          y,\n          x,\n          height\n        } = changeCardRef.current.getBoundingClientRect();\n        animateMoveTo(refCard.current, x, y - height / 4, 1, 0.3, 0);\n      } else {\n        const {\n          y,\n          x,\n          height\n        } = refCard.current.getBoundingClientRect();\n        animateMoveTo(refCard.current, x, y - height / 4, 1, 0.3, 0);\n        const lastRef = lastCardActive['ref'];\n        if (lastRef && lastRef.current) {\n          const {\n            y,\n            x,\n            height\n          } = lastRef.current.getBoundingClientRect();\n          animateMoveTo(lastRef.current, x, y + height / 4, 1, 0.3, 0);\n        }\n        lastCardActive = {\n          name,\n          value,\n          ref: refCard\n        };\n      }\n    }\n  }\n}\nexport default cardClick;","map":{"version":3,"names":["animateMoveTo","lastCardActive","name","value","ref","cardClick","e","refCard","changeCardRef","target","dataset","side","current","y","x","height","getBoundingClientRect","lastRef"],"sources":["C:/Users/smeno/OneDrive/Рабочий стол/dur/src/game/res/components/gameCard/cardClick.ts"],"sourcesContent":["import { animateMoveTo } from \"../../../utils/animationUtils\"\r\n\r\ntype TlastCardActive = {name:string,value: string,ref:React.MutableRefObject<HTMLElement> | null}\r\nlet lastCardActive:TlastCardActive = { name: '', value: '', ref: null }\r\n\r\nfunction cardClick(e, name, value, refCard, changeCardRef) {\r\n\tif (e.target.dataset.side == 'back') {\r\n\t\tif (refCard.current) {\r\n\r\n\t\t\tif (lastCardActive['name'] == name && lastCardActive['value'] == value) {\r\n\r\n\t\t\t\tconst { y, x, height } = changeCardRef.current.getBoundingClientRect()\r\n\t\t\t\tanimateMoveTo(\r\n\t\t\t\t\trefCard.current,\r\n\t\t\t\t\tx, y - height / 4,\r\n\t\t\t\t\t1, 0.3, 0\r\n\t\t\t\t)\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconst { y, x, height } = refCard.current.getBoundingClientRect()\r\n\t\t\t\tanimateMoveTo(\r\n\t\t\t\t\trefCard.current,\r\n\t\t\t\t\tx, y - height / 4,\r\n\t\t\t\t\t1, 0.3, 0\r\n\t\t\t\t)\r\n\r\n\t\t\t\tconst lastRef = lastCardActive['ref']\r\n\t\t\t\tif (lastRef && lastRef.current) {\r\n\t\t\t\t\tconst { y, x, height } = lastRef.current.getBoundingClientRect()\r\n\t\t\t\t\tanimateMoveTo(\r\n\t\t\t\t\t\tlastRef.current,\r\n\t\t\t\t\t\tx, y + height/4,\r\n\t\t\t\t\t\t1, 0.3, 0\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tlastCardActive = { name, value, ref: refCard }\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default cardClick"],"mappings":"AAAA,SAASA,aAAa,QAAQ,+BAA+B;AAG7D,IAAIC,cAA8B,GAAG;EAAEC,IAAI,EAAE,EAAE;EAAEC,KAAK,EAAE,EAAE;EAAEC,GAAG,EAAE;AAAK,CAAC;AAEvE,SAASC,SAASA,CAACC,CAAC,EAAEJ,IAAI,EAAEC,KAAK,EAAEI,OAAO,EAAEC,aAAa,EAAE;EAC1D,IAAIF,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,IAAI,IAAI,MAAM,EAAE;IACpC,IAAIJ,OAAO,CAACK,OAAO,EAAE;MAEpB,IAAIX,cAAc,CAAC,MAAM,CAAC,IAAIC,IAAI,IAAID,cAAc,CAAC,OAAO,CAAC,IAAIE,KAAK,EAAE;QAEvE,MAAM;UAAEU,CAAC;UAAEC,CAAC;UAAEC;QAAO,CAAC,GAAGP,aAAa,CAACI,OAAO,CAACI,qBAAqB,CAAC,CAAC;QACtEhB,aAAa,CACZO,OAAO,CAACK,OAAO,EACfE,CAAC,EAAED,CAAC,GAAGE,MAAM,GAAG,CAAC,EACjB,CAAC,EAAE,GAAG,EAAE,CACT,CAAC;MAEF,CAAC,MAAM;QACN,MAAM;UAAEF,CAAC;UAAEC,CAAC;UAAEC;QAAO,CAAC,GAAGR,OAAO,CAACK,OAAO,CAACI,qBAAqB,CAAC,CAAC;QAChEhB,aAAa,CACZO,OAAO,CAACK,OAAO,EACfE,CAAC,EAAED,CAAC,GAAGE,MAAM,GAAG,CAAC,EACjB,CAAC,EAAE,GAAG,EAAE,CACT,CAAC;QAED,MAAME,OAAO,GAAGhB,cAAc,CAAC,KAAK,CAAC;QACrC,IAAIgB,OAAO,IAAIA,OAAO,CAACL,OAAO,EAAE;UAC/B,MAAM;YAAEC,CAAC;YAAEC,CAAC;YAAEC;UAAO,CAAC,GAAGE,OAAO,CAACL,OAAO,CAACI,qBAAqB,CAAC,CAAC;UAChEhB,aAAa,CACZiB,OAAO,CAACL,OAAO,EACfE,CAAC,EAAED,CAAC,GAAGE,MAAM,GAAC,CAAC,EACf,CAAC,EAAE,GAAG,EAAE,CACT,CAAC;QACF;QACAd,cAAc,GAAG;UAAEC,IAAI;UAAEC,KAAK;UAAEC,GAAG,EAAEG;QAAQ,CAAC;MAC/C;IAED;EACD;AACD;AAEA,eAAeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}