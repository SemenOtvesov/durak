{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smeno\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\dur\\\\src\\\\game\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// css\nimport \"../game/css/game.css\";\n// img\nimport imgAvatar from \"../media/img/avatar.png\";\n// card Utils\nimport { findCardById, findCardsById } from \"./utils/cardUtils\";\n// animate Utils\nimport { animateMoveTo, animateGetCardsPlayerSelf, animateShowTrumpCard } from \"./utils/animationUtils\";\n// localStorageUtils\n// events\nimport { useIntl } from \"react-intl\";\n\n// game\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  var _gameStatus$fieldSize, _gameStatus$playerAmo, _gameStatus$trumpCard;\n  const intl = useIntl();\n  const playerTitle = intl.formatMessage({\n    id: \"player_title\"\n  });\n  let gameStatus = JSON.parse(localStorage.getItem(\"game_status\"));\n  const [game, setGame] = useState({\n    status: \"load\",\n    // loading, await, start, distribution,trump_card, play, end ...\n    cardsCount: (_gameStatus$fieldSize = gameStatus === null || gameStatus === void 0 ? void 0 : gameStatus.fieldSize) !== null && _gameStatus$fieldSize !== void 0 ? _gameStatus$fieldSize : 36,\n    playersCount: (_gameStatus$playerAmo = gameStatus === null || gameStatus === void 0 ? void 0 : gameStatus.playerAmount) !== null && _gameStatus$playerAmo !== void 0 ? _gameStatus$playerAmo : 6,\n    trumpCard: (_gameStatus$trumpCard = gameStatus === null || gameStatus === void 0 ? void 0 : gameStatus.trumpCard) !== null && _gameStatus$trumpCard !== void 0 ? _gameStatus$trumpCard : null\n  });\n  // Сам игрок\n  let player_selfk = {\n    id: 4,\n    index: 4,\n    status: \"online\",\n    name: `${playerTitle} 1`,\n    avatar: imgAvatar,\n    cards: [],\n    cardsCount: 0,\n    self: true\n  };\n\n  // Массив других игроков\n  let otherPlayers = Array((game === null || game === void 0 ? void 0 : game.playersCount) - 1).fill(1).map((_, index) => ({\n    id: index,\n    index,\n    status: \"online\",\n    name: `${playerTitle} ${index + 1}`,\n    avatar: imgAvatar,\n    cards: [],\n    cardsCount: 0,\n    self: false\n  }));\n\n  // render\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"game\",\n    style: {\n      // backgroundImage: `url(/res/skins${activeCosmetic?.find((item) => item.cosmetic?.type === \"table\")\n      // \t?.cosmetic?.link\n      // \t})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: otherPlayers.map((player, index) => {\n        let topPosition = \"0px\";\n\n        // if (otherPlayers.length > 2) {\n        // \tif (index <= playerCenterIndex) {\n        // \t\t// Подъем до центрального элемента\n        // \t\ttopPosition = `${(playerCenterIndex - index) * 50}px`;\n        // \t} else {\n        // \t\t// Спуск после центрального элемента\n        // \t\ttopPosition = `${(index - playerCenterIndex) * 50}px`;\n        // \t}\n        // }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          id: player.id,\n          // ref={(el) => (playerRefs.current[index] = el)}\n          style: {\n            position: \"relative\",\n            marginTop: topPosition\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile\",\n              src: player.avatar,\n              alt: \"player_picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player_name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), (game === null || game === void 0 ? void 0 : game.status) !== \"await\" && (game === null || game === void 0 ? void 0 : game.status) !== \"load\" && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"change_card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"enemy_card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_s(Game, \"yRn9dpR8e80GIondwWwsRUQ8dFA=\", false, function () {\n  return [useIntl];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","imgAvatar","findCardById","findCardsById","animateMoveTo","animateGetCardsPlayerSelf","animateShowTrumpCard","useIntl","jsxDEV","_jsxDEV","Game","_s","_gameStatus$fieldSize","_gameStatus$playerAmo","_gameStatus$trumpCard","intl","playerTitle","formatMessage","id","gameStatus","JSON","parse","localStorage","getItem","game","setGame","status","cardsCount","fieldSize","playersCount","playerAmount","trumpCard","player_selfk","index","name","avatar","cards","self","otherPlayers","Array","fill","map","_","className","style","backgroundRepeat","backgroundSize","children","player","topPosition","position","marginTop","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smeno/OneDrive/Рабочий стол/dur/src/game/game.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n// css\r\nimport \"../game/css/game.css\";\r\n// img\r\nimport imgAvatar from \"../media/img/avatar.png\";\r\n// card Utils\r\nimport {\r\n\tfindCardById,\r\n\tfindCardsById,\r\n} from \"./utils/cardUtils\";\r\n// animate Utils\r\nimport {\r\n\tanimateMoveTo,\r\n\tanimateGetCardsPlayerSelf,\r\n\tanimateShowTrumpCard,\r\n} from \"./utils/animationUtils\";\r\n// localStorageUtils\r\n// events\r\nimport { useIntl } from \"react-intl\";\r\n\r\n// game\r\nconst Game = () => {\r\n\tconst intl = useIntl();\r\n\tconst playerTitle = intl.formatMessage({ id: \"player_title\" });\r\n\tlet gameStatus = JSON.parse(localStorage.getItem(\"game_status\"));\r\n\r\n\tconst [game, setGame] = useState({\r\n\t\tstatus: \"load\", // loading, await, start, distribution,trump_card, play, end ...\r\n\t\tcardsCount: gameStatus?.fieldSize ?? 36,\r\n\t\tplayersCount: gameStatus?.playerAmount ?? 6,\r\n\t\ttrumpCard: gameStatus?.trumpCard ?? null,\r\n\t});\r\n\t// Сам игрок\r\n\tlet player_selfk = {\r\n\t\tid: 4,\r\n\t\tindex: 4,\r\n\t\tstatus: \"online\",\r\n\t\tname: `${playerTitle} 1`,\r\n\t\tavatar: imgAvatar,\r\n\t\tcards: [],\r\n\t\tcardsCount: 0,\r\n\t\tself: true,\r\n\t};\r\n\r\n\t// Массив других игроков\r\n\tlet otherPlayers = Array(game?.playersCount - 1).fill(1).map((_, index) => ({\r\n\t\tid: index,\r\n\t\tindex,\r\n\t\tstatus: \"online\",\r\n\t\tname: `${playerTitle} ${index + 1}`,\r\n\t\tavatar: imgAvatar,\r\n\t\tcards: [],\r\n\t\tcardsCount: 0,\r\n\t\tself: false,\r\n\t}))\r\n\r\n\t// render\r\n\treturn (\r\n\t\t<section\r\n\t\t\tclassName=\"game\"\r\n\t\t\tstyle={{\r\n\t\t\t\t// backgroundImage: `url(/res/skins${activeCosmetic?.find((item) => item.cosmetic?.type === \"table\")\r\n\t\t\t\t// \t?.cosmetic?.link\r\n\t\t\t\t// \t})`,\r\n\t\t\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{/* players */}\r\n\t\t\t<div className=\"players\">\r\n\t\t\t\t{otherPlayers.map((player, index) => {\r\n\t\t\t\t\tlet topPosition = \"0px\";\r\n\r\n\t\t\t\t\t// if (otherPlayers.length > 2) {\r\n\t\t\t\t\t// \tif (index <= playerCenterIndex) {\r\n\t\t\t\t\t// \t\t// Подъем до центрального элемента\r\n\t\t\t\t\t// \t\ttopPosition = `${(playerCenterIndex - index) * 50}px`;\r\n\t\t\t\t\t// \t} else {\r\n\t\t\t\t\t// \t\t// Спуск после центрального элемента\r\n\t\t\t\t\t// \t\ttopPosition = `${(index - playerCenterIndex) * 50}px`;\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"player\"\r\n\t\t\t\t\t\t\tid={player.id}\r\n\t\t\t\t\t\t\tkey={player.id}\r\n\t\t\t\t\t\t\t// ref={(el) => (playerRefs.current[index] = el)}\r\n\t\t\t\t\t\t\tstyle={{ position: \"relative\", marginTop: topPosition }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"picture\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"profile\"\r\n\t\t\t\t\t\t\t\t\tsrc={player.avatar}\r\n\t\t\t\t\t\t\t\t\talt=\"player_picture\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/* <img className=\"frame\" src={imgFrame} alt=\"frame\" /> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"player_name\">{player.name}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{/* {game.status === \"await\" && fullGameDeck.fieldSize !== null && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"await\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tzIndex: 1000,\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tleft: \"50%\",\r\n\t\t\t\t\t\ttop: \"20%\",\r\n\t\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t\t\t\t\tfontSize: \"clamp(30px, 4vw, 40px)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{fullGameDeck.players.length}/{fullGameDeck.playerAmount}\r\n\t\t\t\t</div>\r\n\t\t\t)} */}\r\n\t\t\t{/* timer */}\r\n\r\n\t\t\t{/* <Timer\r\n\t\t\t\tduration={duration}\r\n\t\t\t\tonFinish={handleTimerFinish}\r\n\t\t\t\tisActive={timerActive}\r\n\t\t\t/> */}\r\n\r\n\t\t\t{/* change_card */}\r\n\t\t\t{(game?.status !== \"await\" && game?.status !== \"load\") && (<span className=\"change_card\"></span>)}\r\n\r\n\t\t\t<span className=\"enemy_card\"></span>\r\n\r\n\t\t\t{/* {deck.map((card, index) => (\r\n\t\t\t\t<GameCard\r\n\t\t\t\t\tstyle={{ zIndex: deck.length - index }} // Передаем объект стиля\r\n\t\t\t\t\tref={(el) => (cardRefs.current[index] = el)}\r\n\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\tid={card.id}\r\n\t\t\t\t\ttype={card.type}\r\n\t\t\t\t\tname={card.name}\r\n\t\t\t\t\tvalue={card.value}\r\n\t\t\t\t></GameCard>\r\n\t\t\t))} */}\r\n\r\n\t\t\t{/* player_self */}\r\n\t\t\t{/* <div className=\"player_self\" ref={playerSelfRef}>\r\n\t\t\t\t<div className=\"cards\"></div>\r\n\t\t\t</div> */}\r\n\t\t\t{/* game control buttons */}\r\n\t\t\t{/* {(game?.status !== \"await\" && game?.status !== \"load\") && (\r\n\t\t\t\t<div className=\"control_btns\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"cheat\"\r\n\t\t\t\t\t\tonClick={toggleTimer}\r\n\t\t\t\t\t\tdisabled={!buttonStates.cheat}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<I18nText path=\"cheat_button\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"take\" disabled={!buttonStates.take}>\r\n\t\t\t\t\t\t<I18nText path=\"take_button\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"pass\"\r\n\t\t\t\t\t\tdisabled={!buttonStates.pass}\r\n\t\t\t\t\t\tonClick={finishTurn}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<I18nText path=\"pass_button\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"react\"\r\n\t\t\t\t\t\tonClick={toggleEmojiPopup}\r\n\t\t\t\t\t\tdisabled={!buttonStates.react}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<I18nText path=\"react_button\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)} */}\r\n\r\n\r\n\r\n\r\n\t\t\t{/* Popup с эмодзи */}\r\n\t\t\t{/* <EmojiPopup onSelectEmoji={selectEmoji} show={showEmojiPopup} />\r\n\r\n\t\t\t{selectedEmoji && (\r\n\t\t\t\t<div className={`selected_emoji ${selectedEmojiClass}`}>\r\n\t\t\t\t\t<img src={selectedEmoji} alt=\"Selected Emoji\" />\r\n\t\t\t\t</div>\r\n\t\t\t)} */}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}