{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smeno\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\dur\\\\src\\\\game\\\\components\\\\changeCard.tsx\";\nimport React from \"react\";\nimport GameCard from \"../res/components/gameCard/gameCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChangeCard({\n  game,\n  changeCardRef\n}) {\n  if ((game === null || game === void 0 ? void 0 : game.status) !== \"await\" && (game === null || game === void 0 ? void 0 : game.status) !== \"load\") {\n    var _changeCardRef$curren, _game$attackerCards, _game$attackerCardsFr;\n    const boxWidth = changeCardRef === null || changeCardRef === void 0 ? void 0 : (_changeCardRef$curren = changeCardRef.current) === null || _changeCardRef$curren === void 0 ? void 0 : _changeCardRef$curren.getBoundingClientRect().width;\n    let length = game === null || game === void 0 ? void 0 : (_game$attackerCards = game.attackerCards) === null || _game$attackerCards === void 0 ? void 0 : _game$attackerCards.length;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"change_card\",\n      ref: changeCardRef,\n      style: {\n        left: `-${length * (boxWidth / 2)}px`\n      },\n      children: game === null || game === void 0 ? void 0 : (_game$attackerCardsFr = game.attackerCardsFromMap) === null || _game$attackerCardsFr === void 0 ? void 0 : _game$attackerCardsFr.map((card, index) => card && /*#__PURE__*/_jsxDEV(GameCard, {\n        addRef: () => {},\n        type: '',\n        style: {\n          zIndex: game.deck.length - index,\n          transform: `translate(${index > 2 ? 110 * (index - 3) : 110 * index}%, ${index > 2 ? -110 : 0}%)`\n        },\n        name: card.name,\n        value: card.nominal,\n        changeCardRef: changeCardRef,\n        className: \"game_card_box open-card change_pos\",\n        typeCard: 'onTable'\n      }, `${index}${card.name}${card.value}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n_c = ChangeCard;\nexport default ChangeCard;\nvar _c;\n$RefreshReg$(_c, \"ChangeCard\");","map":{"version":3,"names":["React","GameCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeCard","game","changeCardRef","status","_changeCardRef$curren","_game$attackerCards","_game$attackerCardsFr","boxWidth","current","getBoundingClientRect","width","length","attackerCards","className","ref","style","left","children","attackerCardsFromMap","map","card","index","addRef","type","zIndex","deck","transform","name","value","nominal","typeCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smeno/OneDrive/Рабочий стол/dur/src/game/components/changeCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport GameCard from \"../res/components/gameCard/gameCard\";\r\n\r\nfunction ChangeCard ({game, changeCardRef}){\r\n\tif(game?.status !== \"await\" && game?.status !== \"load\"){\r\n\t\tconst boxWidth = changeCardRef?.current?.getBoundingClientRect().width\r\n\t\tlet length = game?.attackerCards?.length\r\n\t\treturn (\r\n\t\t\t<span className=\"change_card\" ref={changeCardRef} \r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tleft: `-${length * (boxWidth/2)}px`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{game?.attackerCardsFromMap?.map((card, index)=>(\r\n\t\t\t\t\tcard && \r\n\t\t\t\t\t<GameCard\r\n\t\t\t\t\t\taddRef={()=>{}}\r\n\t\t\t\t\t\ttype={''}\r\n\t\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\t\tzIndex: game.deck.length - index, \r\n\t\t\t\t\t\t\ttransform: `translate(${\r\n\t\t\t\t\t\t\t\tindex > 2 ? 110*(index-3) : 110*index\r\n\t\t\t\t\t\t\t}%, ${\r\n\t\t\t\t\t\t\t\tindex > 2 ? -110 : 0\r\n\t\t\t\t\t\t\t}%)`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={`${index}${card.name}${card.value}`}\r\n\t\t\t\t\t\tname={card.name}\r\n\t\t\t\t\t\tvalue={card.nominal}\r\n\t\t\t\t\t\tchangeCardRef={changeCardRef}\r\n\t\t\t\t\t\tclassName=\"game_card_box open-card change_pos\"\r\n\t\t\t\t\t\ttypeCard={'onTable'}\r\n\t\t\t\t\t></GameCard>\r\n\t\t\t\t))}\r\n\t\t\t</span>\r\n\t\t)\r\n\t}else{\r\n\t\treturn <></>\r\n\t}\r\n}\r\n\r\nexport default ChangeCard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,UAAUA,CAAE;EAACC,IAAI;EAAEC;AAAa,CAAC,EAAC;EAC1C,IAAG,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,MAAK,OAAO,IAAI,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,MAAK,MAAM,EAAC;IAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,qBAAA;IACtD,MAAMC,QAAQ,GAAGL,aAAa,aAAbA,aAAa,wBAAAE,qBAAA,GAAbF,aAAa,CAAEM,OAAO,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAwBK,qBAAqB,CAAC,CAAC,CAACC,KAAK;IACtE,IAAIC,MAAM,GAAGV,IAAI,aAAJA,IAAI,wBAAAI,mBAAA,GAAJJ,IAAI,CAAEW,aAAa,cAAAP,mBAAA,uBAAnBA,mBAAA,CAAqBM,MAAM;IACxC,oBACCd,OAAA;MAAMgB,SAAS,EAAC,aAAa;MAACC,GAAG,EAAEZ,aAAc;MAChDa,KAAK,EAAE;QACNC,IAAI,EAAE,IAAIL,MAAM,IAAIJ,QAAQ,GAAC,CAAC,CAAC;MAChC,CAAE;MAAAU,QAAA,EAEDhB,IAAI,aAAJA,IAAI,wBAAAK,qBAAA,GAAJL,IAAI,CAAEiB,oBAAoB,cAAAZ,qBAAA,uBAA1BA,qBAAA,CAA4Ba,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAC5CD,IAAI,iBACJvB,OAAA,CAACF,QAAQ;QACR2B,MAAM,EAAEA,CAAA,KAAI,CAAC,CAAE;QACfC,IAAI,EAAE,EAAG;QACTR,KAAK,EAAE;UACNS,MAAM,EAAEvB,IAAI,CAACwB,IAAI,CAACd,MAAM,GAAGU,KAAK;UAChCK,SAAS,EAAE,aACVL,KAAK,GAAG,CAAC,GAAG,GAAG,IAAEA,KAAK,GAAC,CAAC,CAAC,GAAG,GAAG,GAACA,KAAK,MAErCA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QAEtB,CAAE;QAEFM,IAAI,EAAEP,IAAI,CAACO,IAAK;QAChBC,KAAK,EAAER,IAAI,CAACS,OAAQ;QACpB3B,aAAa,EAAEA,aAAc;QAC7BW,SAAS,EAAC,oCAAoC;QAC9CiB,QAAQ,EAAE;MAAU,GALf,GAAGT,KAAK,GAAGD,IAAI,CAACO,IAAI,GAAGP,IAAI,CAACQ,KAAK,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAM9B,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAET,CAAC,MAAI;IACJ,oBAAOrC,OAAA,CAAAE,SAAA,mBAAI,CAAC;EACb;AACD;AAACoC,EAAA,GApCQnC,UAAU;AAsCnB,eAAeA,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}